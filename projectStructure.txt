Project Structure Documentation

backend/
|
|── setup/                                     
|   ├── create_store_and_assistant.py          # Creates assistant and vector store
|   ├── new_setup.py                           # New setup method for updating vector store functionality
|   ├── file_setup_info.json                   # File mappings produced by new_setup.py
|   ├── proof_authorize_Box.py                 # Helper method to authorize Box account
|   ├── README.md                              # Explains current and new set up methods
|
|── src/
|   ├── assistant_api.py                       # API for the chatbot assistnat
|   ├── assistant_api.log                      # Log for assistant_api.py
|   ├── box_client_api.py                      # API for interacting with Box (not currently used)
|   ├── box_client.log                         # Log for box_client_api.py
|   ├── main.py                                # Starts the backend and defines API endpoints
|   ├── server.log                             # Log for main.py
|   ├── vector_store_api.py                    # API for the vector stores (not currently used)
|   ├── vector_store_api.log                   # Log for vector_store_api.py
|   ├── README.md                              # Explains using the backend locally (useless b/c of manage_app)
|   ├── venv/                                  # Virtual environment
|   └── requirements.txt                       # Required dependencies for the backend
|
|── test/                                      # Test files (needs to be updated)
|
|── 168895_g0v9h4sy_config.json                # Encrypted JWT token for Box
|── Dockerfile                                 # Defines how to build and run the backend inside a Docker container
|
frontend/
|
|── public/
|   ├── favicon.ico                            # Favicon of Skidmore's logo
|   ├── index.html                             # Basic HTML to load the project
|   └── robots.txt                             # Template file for restricting spiders
|
|── src/
|   ├── components/            # Holds individual React components
|   │   ├── App.js             # Main component managing authentication and conditional rendering
|   │   ├── Chat.js            # Chat interface component for displaying and sending messages
|   │   ├── RequireAuth.js     # Forces requirement of Okta authentication to access the chatbot
|   │   └── Notification.js    # Notification component for displaying success/error messages
|   |
|   ├── styles/                # Stylesheets for each component to maintain modular design
|   │   ├── App.css            # Styles for the main App component
|   │   ├── Chat.css           # Styles for the Chat interface, including message layout and animations
|   │   └── Notification.css   # Styles for Notification component, including success and error styles
|   |
|   ├── index.js               # Entry point for the React application, renders the App componentx
|   ├── index.css              # Styles for the React entry point
|   ├── App.test.js            # Template test for the React app
|   ├── reportWebVitals.js     # A utility file for measuring performance metrics in the app
|   └── setupTests.js          # Configuration file for setting up testing environment, commonly for Jest
|
├──.gitignore                  # Files git doesn't track in the frontend
├── package.json               # Contains metadata about the project and its dependencies
├── package-lock.json          # Ensures consistent installation of dependencies across environments
├── Dockerfile                 # Defines how to build and run the frontend inside a Docker container
├── README.md                  # Project documentation, including setup instructions and description
|
├── images/
|   └── MSCHE_Chatbot_FlowChart_v1.png      # Project workflow diagram on the root README.md
|
├── .gitignore                 # Files git doesn't track in the whole repository
├── docker-compose.yml         # Composes the backend and frontend containers together
├── manage_app.sh              # Script for managing the app and venv locally
├── projectStructure.txt       # The current file that is describing the project composition
├── test_file.txt              # File added to repository through Chatgpt
└── README.md                  # Overview and important information for the application


