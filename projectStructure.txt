Project Structure Documentation

backend/
|
|── setup/                                     
|   ├── create_store_and_assistant.py          # Creates assistant and vector store
|   ├── new_setup.py                           # New setup method for updating vector store functionality
|   ├── file_setup_info.json                   # File mappings produced by new_setup.py
|   ├── proof_authorize_Box.py                 # Helper method to authorize Box account
|   ├── README.md                              # Explains current and new set up methods
|
|── src/
|   ├── assistant_api.py                       # API for the chatbot assistnat
|   ├── assistant_api.log                      # Log for assistant_api.py
|   ├── box_client_api.py                      # API for interacting with Box (not currently used)
|   ├── box_client.log                         # Log for box_client_api.py
|   ├── main.py                                # Starts the backend and defines API endpoints
|   ├── server.log                             # Log for main.py
|   ├── vector_store_api.py                    # API for the vector stores (not currently used)
|   ├── vector_store_api.log                   # Log for vector_store_api.py
|   ├── README.md                              # Explains using the backend locally (useless b/c of manage_app)
|   ├── venv/                                  # Virtual environment
|   ├── requirements.txt                       # Required dependencies for the backend
|
|── test/                                      # Test files (needs to be updated)
|
|── 168895_g0v9h4sy_config.json                # Encrypted JWT token for Box
|
|── Dockerfile                                 # Dockerfile for the backend

frontend/
|
|── src/
|   ├── components/            # Holds individual React components
|   │   ├── App.js             # Main component managing authentication and conditional rendering
|   │   ├── Chat.js            # Chat interface component for displaying and sending messages
|   │   ├── Login.js           # Login form component for user authentication
|   │   └── Notification.js    # Notification component for displaying success/error messages
|   |
|   ├── styles/                # Stylesheets for each component to maintain modular design
|   │   ├── App.css            # Styles for the main App component
|   │   ├── Chat.css           # Styles for the Chat interface, including message layout and animations
|   │   ├── Login.css          # Styles for the Login page, with card layout and hover effects
|   │   └── Notification.css   # Styles for Notification component, including success and error styles
|   |
|   ├── utils/                 # Utility functions that may be reused across components
|   │   └── auth.js            # Utility functions for managing authentication logic
|   |
|   ├── services/              # External service handlers for handling API calls and backend integration
|   │   └── authService.js     # Authentication logic for verifying user password
|   |
|   ├── index.js               # Entry point for the React application, renders the App componentx

